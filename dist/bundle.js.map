{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3BA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA,QAAQ,uBAAuB,EAAE,mBAAO,CAAC,iFAAsC;AAC/E,gBAAgB,mBAAO,CAAC,mDAAuB;;AAE/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,yBAAyB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AClEA,gBAAgB,mBAAO,CAAC,mDAAuB;;AAE/C;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,UAAU,gCAAgC;;AAE1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;AC5BA,gBAAgB,mBAAO,CAAC,mDAAuB;;AAE/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,iCAAiC,gDAAgD;AACjF;;AAEA;AACA;AACA;AACA;;;;;;;;;;AC3CA,WAAW,mBAAO,CAAC,cAAI;;AAEvB;AACA,eAAe,+DAAQ,GAAS,EAAE,SAAS,MAAM,CAAC;AAClD;AACA;;AAEA;AACA;AACA,2BAA2B,SAAS;AACpC;;AAEA;AACA;AACA;AACA;;;;;;;;;;ACfA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,OAAO;;AAEP;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC3DA,gBAAgB,mBAAO,CAAC,wBAAS;;AAEjC,0BAA0B,mBAAO,CAAC,mFAAuC;;AAEzE;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACXA,gBAAgB,mBAAO,CAAC,wBAAS;;AAEjC,uBAAuB,mBAAO,CAAC,6EAAoC;;AAEnE;;AAEA;;AAEA;;;;;;;;;;;ACRA,gBAAgB,mBAAO,CAAC,wBAAS;;AAEjC,2BAA2B,mBAAO,CAAC,qFAAwC;;AAE3E;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCTA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;;;;;;;ACAA,aAAa,mBAAO,CAAC,kBAAM;AAC3B,gBAAgB,mBAAO,CAAC,wBAAS;;AAEjC,mBAAmB,mBAAO,CAAC,0DAA0B;AACrD,sBAAsB,mBAAO,CAAC,gEAA6B;AAC3D,uBAAuB,mBAAO,CAAC,kEAA8B;;AAE7D;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ,iB","sources":["webpack://zum/./data/ sync ^\\.\\/.*\\.json$","webpack://zum/external commonjs \"express\"","webpack://zum/external node-commonjs \"fs\"","webpack://zum/external node-commonjs \"path\"","webpack://zum/./controllers/article.controller.cjs","webpack://zum/./controllers/best.controller.cjs","webpack://zum/./controllers/category.controller.cjs","webpack://zum/./management/article.management.cjs","webpack://zum/./models/Article.cjs","webpack://zum/./routes/article.routes.cjs","webpack://zum/./routes/base.routes.cjs","webpack://zum/./routes/category.routes.cjs","webpack://zum/webpack/bootstrap","webpack://zum/webpack/runtime/hasOwnProperty shorthand","webpack://zum/./app.js"],"sourcesContent":["var map = {\n\t\"./best.json\": \"./data/best.json\",\n\t\"./culture.json\": \"./data/culture.json\",\n\t\"./favs.json\": \"./data/favs.json\",\n\t\"./food.json\": \"./data/food.json\",\n\t\"./life.json\": \"./data/life.json\",\n\t\"./travel.json\": \"./data/travel.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./data sync recursive ^\\\\.\\\\/.*\\\\.json$\";","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","const { readFile, updateFile } = require('../management/article.management.cjs');\nconst Article = require('../models/Article.cjs');\n\nconst getArticles = (req, res) => {\n  const path = req.path.split('/');\n  const filename = path[path.length - 1];\n  const articles = readFile(filename);\n  res.json(articles);\n}\n\nconst getContent = (req, res) => {\n  const filename = req.params.category;\n  const articles = readFile(filename);\n  res.json(articles);\n}\n\nconst getContentDetails = (req, res) => {\n  const articleId = parseInt(req.params.idx);\n  const filename = req.params.category;\n  const article = readFile(filename).find(article => article.idx === articleId);\n  res.json(article);\n}\n\nconst updateContent = async (req, res) => {\n  const { idx: articleIdx, isFav } = req.body;\n  const article = new Article();\n  \n  let updatedFavList, data, list;\n  const favList = readFile('favs');\n\n  try {\n    data = await article.fetchArticle(articleIdx);\n    list = await article.fetchData(data.category);\n  } catch(error) {\n    return new Error(error);\n  }\n  \n  const updatedArticle = {\n    ...data.article,\n    isFav: isFav\n  }\n\n  const index = list.findIndex(item => item.idx === parseInt(articleIdx));\n  const updatedList = [...list.slice(0, index), updatedArticle, ...list.slice(index + 1)];\n  \n  if(isFav) {\n    if(favList.find(item => item.idx === parseInt(articleIdx))) return;\n    updatedFavList = [...favList, updatedArticle];\n  } else {\n    updatedFavList = favList.filter(item => item.idx !== parseInt(articleIdx));\n  }\n\n  updateFile('favs', updatedFavList);\n  updateFile(data.category, updatedList);\n\n  res.json({\n    message: 'List updated!',\n    updatedList: updatedList\n  });\n}\n\nmodule.exports = {\n  getArticles: getArticles,\n  getContent: getContent,\n  getContentDetails: getContentDetails,\n  updateContent: updateContent\n}","const Article = require('../models/Article.cjs');\n\nconst article = new Article();\n\nconst getHome = async (req, res) => {\n  let bestArticles, data;\n\n  try {\n    bestArticles = await article.fetchData('best');\n    data = await article.fetchAllArticles();\n  } catch(error) {\n    return new Error(error);\n  }\n\n  const { categories, allData: articles } = data;\n\n  const responseData = {\n    pageTitle: 'ZUM',\n    categories: categories,\n    articles: articles,\n    bestArticles : bestArticles\n  }\n\n  return res.render('index', responseData);\n}\n\nmodule.exports = {\n  getHome: getHome\n}","const Article = require('../models/Article.cjs');\n\nconst article = new Article();\n\nconst getCategory = async (req, res) => {\n  const path = req.params.category;\n  let articles;\n\n  try {\n    articles = await article.fetchData(path);\n  } catch (error) {\n    return new Error(error);\n  }\n\n  const pageTitle = path[0].toUpperCase() + path.slice(1);\n\n  const data = {\n    title: pageTitle,\n    category: path,\n    articles: articles\n  }\n\n  return res.render('category', data);\n}\n\nconst getArticle = async (req, res) => {\n  const category = req.params.category;\n  const idx = req.params.idx;\n\n  let data;\n  \n  try {\n    data = await article.fetchArticle(idx);\n  } catch (error) {\n    return new Error(error);\n  }\n\n  return res.render('article', { article: data.article, category: data.category });\n}\n\nmodule.exports = {\n  getCategory: getCategory,\n  getArticle: getArticle\n}","const fs = require('fs');\n\nconst readFile = (filename) => {\n  const data = require(`../data/${filename}.json`);\n  return data;\n}\n\nconst updateFile = (filename, data) => {\n  const changedData = JSON.stringify(data);\n  fs.writeFileSync(`data/${filename}.json`, changedData);\n}\n\nmodule.exports = {\n  readFile: readFile, \n  updateFile: updateFile\n}","class Article {  \n  constructor() {\n    this.categories = ['life', 'travel', 'food', 'culture']\n  }\n\n  async fetchData (filename) {\n    let path;\n    \n    if(filename === 'best') {\n      path = `http://localhost:3000/best`;\n    } else {\n      path = `http://localhost:3000/content/${filename}`;\n    }\n  \n    try {\n      const data = await fetch(path);\n      const response = await data.json();\n      return response;\n    } catch(error) {\n      console.log('Not being able to fetch the data');\n    }\n  }\n  \n  async fetchAllArticles () {\n    let allData = [];\n    let categoryData;\n\n    try {\n      categoryData = await Promise.all(this.categories.map(async (category) => {\n        const data = await this.fetchData(category);\n        return data.slice(0, 3);\n      }));\n    } catch (error) {\n      return new Error(error);\n    }\n\n    for(const data of categoryData) {\n      allData = [...allData, ...data];\n    }\n    \n    return { categories: this.categories, allData };\n  }\n\n  async fetchArticle(idx) {\n    try {\n      const result = await Promise.all(this.categories.map(async (category) => {\n      const data = await this.fetchData(category);\n      const articleList = data.filter(item => item.idx === parseInt(idx));\n      const [article] = articleList;\n      if(articleList.length > 0) return { category, article };\n      }))\n\n      return result.find(element => element);\n    } catch (error) {\n      return new Error(error);\n    }\n  }\n}\n\nmodule.exports = Article;\n","const express = require('express');\n\nconst articleController = require('../controllers/article.controller.cjs');\n\nconst router = express.Router();\n\nrouter.get('/best', articleController.getArticles);\nrouter.get('/content/:category', articleController.getContent);\nrouter.get('/content/:category/:idx', articleController.getContentDetails);\nrouter.patch('/content/category', articleController.updateContent);\n\nmodule.exports = router;\n\n","const express = require('express');\n\nconst bestController = require('../controllers/best.controller.cjs');\n\nconst router = express.Router();\n\nrouter.get('/', bestController.getHome);\n\nmodule.exports = router;\n","const express = require('express');\n\nconst categoryController = require('../controllers/category.controller.cjs');\n\nconst router = express.Router();\n\nrouter.get('/:category', categoryController.getCategory);\nrouter.get('/:category/:idx', categoryController.getArticle);\n\nmodule.exports = router;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const path = require('path');\nconst express = require('express');\n\nconst baseRoutes = require('./routes/base.routes.cjs');\nconst articleRoutes = require('./routes/article.routes.cjs');\nconst categoryRoutes = require('./routes/category.routes.cjs');\n\nconst app = express();\n\napp.set('view engine', 'ejs');\napp.set('views', path.join(__dirname, 'views'));\n\napp.use(express.json());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use(articleRoutes);\napp.use(baseRoutes);\napp.use(categoryRoutes);\n\n// app.use((error, req, res, next) => {\n//   res.status(500).render('500');\n// });\n\napp.listen(3000);"],"names":[],"sourceRoot":""}